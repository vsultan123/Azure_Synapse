{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "first-synapse-vasi"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"first-synapse-vasi-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'first-synapse-vasi-WorkspaceDefaultSqlServer'"
		},
		"first-synapse-vasi-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testadlsvasi.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Employees Incremental Load')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Incremental Load Employees",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Process Start Time and Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[Merge_Employees]"
						}
					},
					{
						"name": "Update Incremental Load Pipeline Start Date and status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_Start_Dates]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_triggered_time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						}
					},
					{
						"name": "Update Incremental Load Pipeline end Date and status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental Load Employees",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnSuccess]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update Pipeline end Date and failed status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental Load Employees",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnFailure]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update Process Start Time and Status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Incremental Load Pipeline Start Date and status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[DW_Load_on_Start]",
							"storedProcedureParameters": {
								"datasource": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"processName": {
									"value": "Employyes_Dest",
									"type": "String"
								},
								"status": {
									"value": "RUNNING",
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update Process End Time and  Success Status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental Load Employees",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[DW_Load_onSuccess]",
							"storedProcedureParameters": {
								"datasource": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"processName": {
									"value": "Employyes_Dest",
									"type": "String"
								},
								"status": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update Process End Time and  Failed Status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental Load Employees",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[DW_Load_OnFailure]",
							"storedProcedureParameters": {
								"datasource": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Error_msg": {
									"value": "Pipeline Failed Due to error",
									"type": "String"
								},
								"processName": {
									"value": "Employyes_Dest",
									"type": "String"
								},
								"status": {
									"value": "FAILED",
									"type": "String"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataSourceName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/DB2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Full Load Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Find tables to be fully Loaded in Target",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Full Load Pipeline Start Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "Select * from Stats.DW_ETl_Load where Load_Type='F'",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DB2Connection_another",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Find tables to be fully Loaded in Target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Find tables to be fully Loaded in Target').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Full Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "truncate Dest Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "SqlPoolSink",
											"writeBehavior": "Insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DB2Connection",
											"type": "DatasetReference",
											"parameters": {
												"Schema": {
													"value": "@item().Staging_Schema_Name",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().Staging_Object_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DB2Connection",
											"type": "DatasetReference",
											"parameters": {
												"Schema": {
													"value": "@item().Target_Schema_Name",
													"type": "Expression"
												},
												"TableName": "@item().Target_Object_name"
											}
										}
									]
								},
								{
									"name": "truncate Dest Tables",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Update Process Start Time",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[USP_Truncate_Staging_Table]",
										"storedProcedureParameters": {
											"Staging_Schema": {
												"value": {
													"value": "@item().Target_Schema_Name",
													"type": "Expression"
												},
												"type": "String"
											},
											"staging_table_name": {
												"value": {
													"value": "@item().Target_Object_name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Update Process Start Time",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[DW_Load_on_Start]",
										"storedProcedureParameters": {
											"datasource": {
												"value": {
													"value": "@pipeline().parameters.Datasourcename",
													"type": "Expression"
												},
												"type": "String"
											},
											"processName": {
												"value": {
													"value": "@item().target_object_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"status": {
												"value": "RUNNING",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Update End Date and Status on Success",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Full Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[DW_Load_onSuccess]",
										"storedProcedureParameters": {
											"datasource": {
												"value": {
													"value": "@pipeline().parameters.Datasourcename",
													"type": "Expression"
												},
												"type": "String"
											},
											"processName": {
												"value": {
													"value": "@item().target_object_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"status": {
												"value": "SUCCESS",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Update End Date and Status on Failure",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Full Load",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "truncate Dest Tables",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Update Process Start Time",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[DW_Load_OnFailure]",
										"storedProcedureParameters": {
											"datasource": {
												"value": {
													"value": "@pipeline().parameters.Datasourcename",
													"type": "Expression"
												},
												"type": "String"
											},
											"Error_msg": {
												"value": "Pipeline Failed Due to an error",
												"type": "String"
											},
											"processName": {
												"value": {
													"value": "@item().target_object_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"status": {
												"value": "FAILED",
												"type": "String"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Update Full Load Pipeline Start Date",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_Start_Dates]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.Datasourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_triggered_time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						}
					},
					{
						"name": "Update Full Load Pipeline End Date",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnSuccess]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.Datasourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update Full Load Pipeline End date and failed status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Find tables to be fully Loaded in Target",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnFailure]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.Datasourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Datasourcename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DB2Connection_another')]",
				"[concat(variables('workspaceId'), '/sqlPools/DB2')]",
				"[concat(variables('workspaceId'), '/datasets/DB2Connection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Master Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Source to staging",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Update Master pipeline start time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Source to Staging Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataSourcename": {
									"value": "@pipeline().parameters.DataSourceName",
									"type": "Expression"
								},
								"Load_Type": "F",
								"BatchID": "2851"
							}
						}
					},
					{
						"name": "Full Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Source to staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Full Load Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Datasourcename": {
									"value": "@pipeline().parameters.DataSourceName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Employees Incremental Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Full Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Employees Incremental Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataSourceName": {
									"value": "@pipeline().parameters.DataSourceName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Update Master pipeline start time",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Insert into ETL History Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_Start_Dates]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_triggered_time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						}
					},
					{
						"name": "Update Master Pipeline End Data and Status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Employees Incremental Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnSuccess]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update Master Pipeline End Date and Failed Status",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Employees Incremental Load",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Source to staging",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Full Load",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnFailure]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Insert into ETL History Table",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[Insert_Master_ETL_History]",
							"storedProcedureParameters": {
								"datasourcename": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_trigger_time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "Byte[]"
								}
							}
						}
					},
					{
						"name": "Update End Date in Execution History Table",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Master Pipeline End Data and Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[Update_Master_ETL_History]",
							"storedProcedureParameters": {
								"datasourcename": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "Byte[]"
								},
								"status": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update End Date in Execution History Table_copy1",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Master Pipeline End Date and Failed Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[Update_Master_ETL_History]",
							"storedProcedureParameters": {
								"datasourcename": {
									"value": {
										"value": "@pipeline().parameters.DataSourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "Byte[]"
								},
								"status": {
									"value": "FAILED",
									"type": "String"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataSourceName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Source to Staging Load')]",
				"[concat(variables('workspaceId'), '/pipelines/Full Load Pipeline')]",
				"[concat(variables('workspaceId'), '/pipelines/Employees Incremental Load')]",
				"[concat(variables('workspaceId'), '/sqlPools/DB2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source to Staging Load')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Find Objects need to be load",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Pipeline Started Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderStoredProcedureName": "[stats].[usp_object_list_to_load]",
								"storedProcedureParameters": {
									"DataSourceName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataSourcename",
											"type": "Expression"
										}
									},
									"Load_Type": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Load_Type",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DB2Connection_another",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Find Objects need to be load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Find Objects need to be load').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Truncate Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "@item().SQL_Query",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "SqlPoolSink",
											"writeBehavior": "Insert",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "FirstDBconnection",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DB2Connection",
											"type": "DatasetReference",
											"parameters": {
												"Schema": {
													"value": "@item().Staging_Schema_Name",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().Staging_Object_name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Process Start Time",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[USP_Table_Extraction_on_Start]",
										"storedProcedureParameters": {
											"datasource": {
												"value": {
													"value": "@pipeline().parameters.DataSourcename",
													"type": "Expression"
												},
												"type": "String"
											},
											"processName": {
												"value": {
													"value": "@item().Staging_Object_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"status": {
												"value": "RUNNING",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Truncate Staging Tables",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Update Process Start Time",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[USP_Truncate_Staging_Table]",
										"storedProcedureParameters": {
											"Staging_Schema": {
												"value": {
													"value": "@item().Staging_Schema_Name",
													"type": "Expression"
												},
												"type": "String"
											},
											"staging_table_name": {
												"value": {
													"value": "@item().Staging_Object_name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Update Process End Date and WaterMark Column",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[USP_Table_Extraction_onSuccess]",
										"storedProcedureParameters": {
											"datasource": {
												"value": {
													"value": "@pipeline().parameters.DataSourcename",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"processName": {
												"value": {
													"value": "@item().Staging_Object_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"status": {
												"value": "SUCCESS",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Update Process End Date on Failure",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "DB2",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[stats].[USP_Table_Extraction_onFailure]",
										"storedProcedureParameters": {
											"datasource": {
												"value": {
													"value": "@pipeline().parameters.DataSourcename",
													"type": "Expression"
												},
												"type": "String"
											},
											"Error_msg": {
												"value": "Pipeline Failed Due to an Error",
												"type": "String"
											},
											"processName": {
												"value": {
													"value": "@item().Staging_Object_name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Update Pipeline Started Time",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_Start_Dates]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_triggered_time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						}
					},
					{
						"name": "Update Main Pipeline Success",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnSuccess]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					},
					{
						"name": "Update Main Pipeline as Failed",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Find Objects need to be load",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "DB2",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[stats].[USP_Update_Pipeline_OnFailure]",
							"storedProcedureParameters": {
								"DataSourceName": {
									"value": {
										"value": "@pipeline().parameters.DataSourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataSourcename": {
						"type": "string"
					},
					"Load_Type": {
						"type": "string"
					},
					"BatchID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DB2Connection_another')]",
				"[concat(variables('workspaceId'), '/sqlPools/DB2')]",
				"[concat(variables('workspaceId'), '/datasets/FirstDBconnection')]",
				"[concat(variables('workspaceId'), '/datasets/DB2Connection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DB2Connection')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				},
				"sqlPool": {
					"referenceName": "DB2",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/DB2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DB2Connection_another')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {},
				"sqlPool": {
					"referenceName": "DB2",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/DB2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FirstDBconnection')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {},
				"sqlPool": {
					"referenceName": "firstdb",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/firstdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/first-synapse-vasi-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('first-synapse-vasi-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/first-synapse-vasi-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('first-synapse-vasi-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [dbo].[Employee]\n( \n\t[col1] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [col1] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "firstdb",
						"poolName": "firstdb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DB2')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "centralindia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/firstdb')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "centralindia"
		}
	]
}